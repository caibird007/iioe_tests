
config:
    name: "thing testcase"
    variables:
        edge_thing_name: "edge_thing_httpruner"
        end_thing_name: "end_thing_httprunner"
        end_type: 1
        edge_type: 2
        token: ${ENV(token)}
    "setup_hooks": [
        "${sleep(1)}"
    ]
    "teardown_hooks": [
        "${sleep(1)}"
    ]
    export:
        - created_edge_thing_id
        - created_end_thing_id

teststeps:
-
    name: test get thing count
    api: api/thing_count.yml
    variables:
        limit: 10
    extract:
        edge_count: content.data.edge_count
        end_count: content.data.end_count
        total_count: content.data.total_count
    validate:
        - eq: ["status_code", 200]

-
    name: search edge thing 
    api: api/thing_list.yml
    variables:
        search: $edge_thing_name
        type: $edge_type
    extract:
        edge_list_data: content.data.data
    validate:
        - eq: ["status_code", 200]
    "teardown_hooks": [
        "${sleep(0.2)}"
    ]


-
    name: search end thing 
    api: api/thing_list.yml
    variables:
        search: $end_thing_name
        type: $end_type
    extract:
        end_list_data: content.data.data
    validate:
        - eq: ["status_code", 200]
    "teardown_hooks": [
        "${sleep(0.2)}"
    ]


-
    name: create edge thing
    api: api/thing_create.yml
    skipUnless: ${is_thing_existed($edge_list_data)}
    variables:
        thing_type: $edge_type
        thing_name: $edge_thing_name
    validate:
        - eq: ["status_code", 200]
    "teardown_hooks": [
        "${sleep(0.2)}"
    ]

-
    name: create end thing
    api: api/thing_create.yml
    skipUnless: ${is_thing_existed($end_list_data)}
    variables:
        thing_type: $end_type
        thing_name: $end_thing_name
    validate:
        - eq: ["status_code", 200]
    "teardown_hooks": [
        "${sleep(0.2)}"
    ]

-
    name: get created edge thing id 
    api: api/thing_list.yml
    variables:
        search: $edge_thing_name
        type: $edge_type
    extract:
        edge_thing_id: content.data.data.0.id
    validate:
        - eq: ["status_code", 200]
    "teardown_hooks": [
        "${sleep(0.2)}"
    ]

-
    name: get created end thing id 
    api: api/thing_list.yml
    variables:
        search: $end_thing_name
        type: $end_type
    extract:
        end_thing_id: content.data.data.0.id
    validate:
        - eq: ["status_code", 200]
    "teardown_hooks": [
        "${sleep(0.2)}"
    ]

-
    name: delete  edge thing
    api: api/thing_delete.yml
    skipIF: ${is_thing_existed($edge_list_data)}
    variables:
        thing_id: $edge_thing_id
    validate:
        - eq: ["status_code", 200]
    "teardown_hooks": [
        "${sleep(0.2)}"
    ]

-
    name: delete  end thing
    api: api/thing_delete.yml
    skipIF: ${is_thing_existed($end_list_data)}
    variables:
        thing_id: $end_thing_id
    validate:
        - eq: ["status_code", 200]
    "teardown_hooks": [
        "${sleep(0.2)}"
    ]


-
    name: search edge thing again
    api: api/thing_list.yml
    variables:
        search: $edge_thing_name
        type: $edge_type
    extract:
        edge_list_data: content.data.data
    validate:
        - eq: ["status_code", 200]


-
    name: search end thing again
    api: api/thing_list.yml
    variables:
        search: $end_thing_name
        type: $end_type
    extract:
        end_list_data: content.data.data
    validate:
        - eq: ["status_code", 200]

-
    name: create edge thing again
    api: api/thing_create.yml
    skipUnless: ${is_thing_existed($edge_list_data)}
    variables:
        thing_type: $edge_type
        thing_name: $edge_thing_name
    extract:
        created_edge_thing_id: content.data.id
    validate:
        - eq: ["status_code", 200]

-
    name: create end thing again
    api: api/thing_create.yml
    skipUnless: ${is_thing_existed($end_list_data)}
    variables:
        thing_type: $end_type
        thing_name: $end_thing_name
    extract:
        created_end_thing_id: content.data.id
    validate:
        - eq: ["status_code", 200]


-
    name: test get thing count again
    api: api/thing_count.yml
    variables:
        limit: 10
    extract:
        edge_count: content.data.edge_count
        end_count: content.data.end_count
        total_count: content.data.total_count
    validate:
        - eq: ["status_code", 200]
        - eq: ["content.data.edge_count", $edge_count]
        - eq: ["content.data.end_count", $end_count]
        - eq: ["content.data.total_count", $total_count]